// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.alibaba.arouter'
apply from:'config.gradle'
apply from:'maven.gradle'

buildscript {
    ext.kotlin_version = '1.4.20'
    repositories {
        maven{
            url "https://maven.aliyun.com/repository/google"
        }
        maven{
            url "https://maven.aliyun.com/repository/central"

        }
        maven {
            url 'https://maven.aliyun.com/repository/releases'
        }
        maven {
            url 'http://mirrors.huaweicloud.com/repository/maven/huaweicloudsdk/'
        }
        maven {
            url 'http://mirrors.huaweicloud.com/repository/maven/'
        }
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "com.alibaba:arouter-register:1.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.10'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            credentials {
                username gradle.username
                password gradle.password
            }
            url 'https://packages.aliyun.com/maven/repository/2044847-release-QxVsG4/'
        }
        maven {
            credentials {
                username gradle.username
                password gradle.password
            }
            url 'https://packages.aliyun.com/maven/repository/2044847-snapshot-GV2hv0/'
        }
        maven {
            url 'http://mirrors.huaweicloud.com/repository/maven/huaweicloudsdk/'
        }
        maven {
            url 'http://mirrors.huaweicloud.com/repository/maven/'
        }
        maven { url 'https://jitpack.io' }
        mavenCentral()
        google()
        jcenter()
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    configurations.all {
        // 动态版本(版本号会变)
        resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'
        // 变化模块(版本号永远不变,但是内容发生变化)
        resolutionStrategy.cacheChangingModulesFor 0, 'minutes'
    }
}



task clean(type: Delete) {
    delete rootProject.buildDir
}
